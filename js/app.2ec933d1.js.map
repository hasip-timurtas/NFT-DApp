{"version":3,"file":"js/app.2ec933d1.js","mappings":"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","sources":["webpack://nft-dapp/./src/App.vue","webpack://nft-dapp/./src/components/MintToken.vue","webpack://nft-dapp/./src/components/WalletButton.vue","webpack://nft-dapp/./src/components/WalletButton.vue?081f","webpack://nft-dapp/./src/components/MintForm.vue","webpack://nft-dapp/./src/components/MintForm.vue?ba8e","webpack://nft-dapp/./src/components/OwnedNfts.vue","webpack://nft-dapp/./src/components/OwnedNfts.vue?7462","webpack://nft-dapp/./src/components/TransferModal.vue","webpack://nft-dapp/./src/components/TransferModal.vue?2fea","webpack://nft-dapp/./src/lib/constants.js","webpack://nft-dapp/./src/lib/pinata.js","webpack://nft-dapp/./src/lib/web3-interact.js","webpack://nft-dapp/./src/components/MintToken.vue?f397","webpack://nft-dapp/./src/App.vue?7ccd","webpack://nft-dapp/./src/main.js","webpack://nft-dapp/webpack/bootstrap","webpack://nft-dapp/webpack/runtime/chunk loaded","webpack://nft-dapp/webpack/runtime/compat get default export","webpack://nft-dapp/webpack/runtime/define property getters","webpack://nft-dapp/webpack/runtime/global","webpack://nft-dapp/webpack/runtime/hasOwnProperty shorthand","webpack://nft-dapp/webpack/runtime/make namespace object","webpack://nft-dapp/webpack/runtime/jsonp chunk loading","webpack://nft-dapp/webpack/startup"],"sourcesContent":["<template>\n  <img alt=\"Vue logo\" src=\"./assets/logo.png\" />\n  <MintToken />\n</template>\n\n<script>\nimport MintToken from \"./components/MintToken.vue\";\n\nexport default {\n  name: \"App\",\n  components: {\n    MintToken,\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n","<template>\n  <div class=\"nft-minter\">\n    <WalletButton :walletAddress=\"walletAddress\" @connect-wallet=\"handleWalletConnection\" />\n    <MintForm @file-change=\"handleFileChange\" @mint-nft=\"handleMinting\" />\n    <hr />\n    <OwnedNfts :nfts=\"ownedNfts\" @load-nfts=\"fetchMyNFTs\" @transfer-nft=\"openTransferModal\" />\n    <hr />\n    <p id=\"transactionStatus\" v-if=\"statusMessage\" :style=\"{ color: 'red' }\">\n      {{ statusMessage }}\n    </p>\n    <TransferModal :show=\"showModal\" :tokenId=\"selectedTokenId\" @confirm-transfer=\"confirmTransfer\"\n      @close-modal=\"closeTransferModal\" />\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from \"vue\";\nimport WalletButton from \"./WalletButton.vue\";\nimport MintForm from \"./MintForm.vue\";\nimport OwnedNfts from \"./OwnedNfts.vue\";\nimport TransferModal from \"./TransferModal.vue\";\n\nimport {\n  connectWallet,\n  getCurrentWalletConnected,\n  mintToken,\n  transferNFT,\n  fetchOwnedNFTs,\n} from \"../lib/web3-interact\";\n\nexport default {\n  components: {\n    WalletButton,\n    MintForm,\n    OwnedNfts,\n    TransferModal,\n  },\n  setup() {\n    const walletAddress = ref(null);\n    const statusMessage = ref(\"\");\n\n    const assetFile = ref(null);\n    const ownedNfts = ref([]);\n\n    const showModal = ref(false);\n    const selectedTokenId = ref(null);\n\n    onMounted(async () => {\n      const { address, status } = await getCurrentWalletConnected();\n      walletAddress.value = address;\n      statusMessage.value = status;\n\n      if (walletAddress.value) {\n        await fetchMyNFTs();\n      }\n      listenForAccountChanges();\n    });\n\n    function listenForAccountChanges() {\n      if (window.ethereum) {\n        window.ethereum.on(\"accountsChanged\", async (accounts) => {\n          if (accounts.length > 0) {\n            walletAddress.value = accounts[0];\n            statusMessage.value = \"Wallet changed. Fetching your NFTs...\";\n            await fetchMyNFTs(); // Fetch NFTs when wallet changes\n          } else {\n            walletAddress.value = null;\n            ownedNfts.value = []; // Clear NFTs when no wallet is connected\n            statusMessage.value = \"Please connect to Metamask.\";\n          }\n        });\n      } else {\n        statusMessage.value = `Metamask is not installed. <a target=\"_blank\" href=\"https://metamask.io/download.html\">Get Metamask</a>`;\n      }\n    }\n\n    const handleWalletConnection = async () => {\n      const { address, status } = await connectWallet();\n      walletAddress.value = address;\n      statusMessage.value = status;\n      if (walletAddress.value) {\n        await fetchMyNFTs();\n      }\n    };\n\n    const handleFileChange = (file) => {\n      assetFile.value = file;\n    };\n\n    const handleMinting = async () => {\n      if (!assetFile.value) {\n        statusMessage.value = \"Please upload an image file.\";\n        return;\n      }\n\n      const { success, status } = await mintToken(assetFile.value);\n      statusMessage.value = status;\n      if (success) {\n        resetMintForm();\n        await fetchMyNFTs(); // Refresh the list after minting\n      }\n    };\n\n    const openTransferModal = (tokenId) => {\n      selectedTokenId.value = tokenId;\n      showModal.value = true;\n    };\n\n    const closeTransferModal = () => {\n      showModal.value = false;\n      selectedTokenId.value = null;\n    };\n\n    const confirmTransfer = async (recipientAddress) => {\n      if (!recipientAddress.trim()) {\n        statusMessage.value = \"Please provide a valid recipient address.\";\n        return;\n      }\n\n      const { success, status } = await transferNFT(selectedTokenId.value, recipientAddress);\n      statusMessage.value = status;\n      if (success) {\n        await fetchMyNFTs(); // Refresh the list after transfer\n        closeTransferModal();\n      }\n    };\n\n    const fetchMyNFTs = async () => {\n      if (!walletAddress.value) {\n        statusMessage.value = \"Connect your wallet to view your NFTs.\";\n        return;\n      }\n\n      const { nfts, status } = await fetchOwnedNFTs(walletAddress.value);\n      ownedNfts.value = nfts;\n      statusMessage.value = status;\n    };\n\n    function resetMintForm() {\n      assetFile.value = null;\n    }\n\n    return {\n      walletAddress,\n      statusMessage,\n      ownedNfts,\n      showModal,\n      selectedTokenId,\n      handleWalletConnection,\n      handleMinting,\n      handleFileChange,\n      openTransferModal,\n      closeTransferModal,\n      confirmTransfer,\n      fetchMyNFTs,\n    };\n  },\n};\n</script>\n","<template>\n    <button id=\"walletButton\" @click=\"handleWalletConnection\">\n        {{\n            walletAddress\n                ? `Connected: ${walletAddress.slice(0, 6)}...${walletAddress.slice(-4)}`\n                : \"Connect Wallet\"\n        }}\n    </button>\n</template>\n\n<script>\nexport default {\n    props: [\"walletAddress\"],\n    methods: {\n        handleWalletConnection() {\n            this.$emit(\"connect-wallet\");\n        },\n    },\n};\n</script>","import { render } from \"./WalletButton.vue?vue&type=template&id=590d61be\"\nimport script from \"./WalletButton.vue?vue&type=script&lang=js\"\nexport * from \"./WalletButton.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <h1 id=\"pageTitle\">NFT Minting Tool</h1>\n        <p>Upload an image and click \"Mint\" to create your NFT.</p>\n\n        <form @submit.prevent=\"handleMinting\">\n            <label for=\"assetFile\">Asset File:</label>\n            <input id=\"assetFile\" type=\"file\" @change=\"handleFileChange\" />\n            <button type=\"submit\" id=\"mintNFTButton\">Mint NFT</button>\n        </form>\n    </div>\n</template>\n\n<script>\nexport default {\n    methods: {\n        handleFileChange(event) {\n            this.$emit(\"file-change\", event.target.files[0]);\n        },\n        handleMinting() {\n            this.$emit(\"mint-nft\");\n        },\n    },\n};\n</script>","import { render } from \"./MintForm.vue?vue&type=template&id=63634f0c\"\nimport script from \"./MintForm.vue?vue&type=script&lang=js\"\nexport * from \"./MintForm.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div>\n        <h2 id=\"ownedNftsTitle\">Your NFTs</h2>\n        <button @click=\"$emit('load-nfts')\">Load My NFTs</button>\n        <div class=\"owned-nfts\" v-if=\"nfts && nfts.length > 0\">\n            <div class=\"nft\" v-for=\"nft in nfts\" :key=\"nft.tokenId\">\n                <img :src=\"nft.tokenURI\" />\n                <p>Token ID: {{ nft.tokenId }}</p>\n                <button @click=\"$emit('transfer-nft', nft.tokenId)\">Transfer</button>\n            </div>\n        </div>\n        <p v-else>No NFTs found for this wallet.</p>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: [\"nfts\"],\n};\n</script>\n\n<style scoped>\n.owned-nfts {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n}\n\n.nft {\n    text-align: center;\n    max-width: 150px;\n}\n\n.nft img {\n    max-width: 100%;\n    height: auto;\n    border: 1px solid #ddd;\n    border-radius: 8px;\n    padding: 5px;\n    background-color: #f9f9f9;\n}\n</style>","import { render } from \"./OwnedNfts.vue?vue&type=template&id=da0c58da&scoped=true\"\nimport script from \"./OwnedNfts.vue?vue&type=script&lang=js\"\nexport * from \"./OwnedNfts.vue?vue&type=script&lang=js\"\n\nimport \"./OwnedNfts.vue?vue&type=style&index=0&id=da0c58da&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-da0c58da\"]])\n\nexport default __exports__","<template>\n    <div v-if=\"show\" class=\"modal-overlay\">\n        <div class=\"modal\">\n            <h3>Transfer NFT</h3>\n            <p>Token ID: {{ tokenId }}</p>\n            <label for=\"recipientAddress\">Recipient Address:</label>\n            <input id=\"recipientAddress\" type=\"text\" placeholder=\"Enter recipient's wallet address\"\n                v-model=\"recipientAddress\" />\n            <button @click=\"confirmTransfer\">Confirm Transfer</button>\n            <button @click=\"$emit('close-modal')\">Cancel</button>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: [\"show\", \"tokenId\"],\n    data() {\n        return {\n            recipientAddress: \"\",\n        };\n    },\n    methods: {\n        confirmTransfer() {\n            this.$emit(\"confirm-transfer\", this.recipientAddress);\n        },\n    },\n};\n</script>\n\n<style scoped>\n.modal-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.7);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 1000;\n}\n\n.modal {\n    background-color: white;\n    padding: 20px;\n    border-radius: 8px;\n    max-width: 400px;\n    width: 100%;\n    text-align: center;\n}\n\n.modal h3 {\n    margin-bottom: 20px;\n}\n\n.modal button {\n    margin-top: 20px;\n    margin-right: 10px;\n    padding: 10px 20px;\n}\n\n.modal input {\n    width: 100%;\n    padding: 10px;\n    margin-top: 10px;\n    box-sizing: border-box;\n}\n</style>","import { render } from \"./TransferModal.vue?vue&type=template&id=726cdd7b&scoped=true\"\nimport script from \"./TransferModal.vue?vue&type=script&lang=js\"\nexport * from \"./TransferModal.vue?vue&type=script&lang=js\"\n\nimport \"./TransferModal.vue?vue&type=style&index=0&id=726cdd7b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-726cdd7b\"]])\n\nexport default __exports__","const nftContractAddress = '0x4eac82370f75f1b1d29b0fbdba0710e995a7d14b'; // the contract I uploaded to Sepolia testnet\nconst infuraProjectId = process.env.VUE_APP_INFURA_PROJECT_ID;\nconst pinataKey = process.env.VUE_APP_PINATA_KEY;\nconst pinataSecret = process.env.VUE_APP_PINATA_SECRET;\n\nexport {\n  infuraProjectId,\n  nftContractAddress,\n  pinataKey,\n  pinataSecret\n}","import { pinataKey, pinataSecret } from './constants';\n\nexport const uploadImageToIpfs = async (file) => {\n  const endpoint = 'https://api.pinata.cloud/pinning/pinFileToIPFS';\n  const formData = new FormData();\n  formData.append('file', file);\n\n  try {\n    const response = await fetch(endpoint, {\n      method: 'POST',\n      headers: {\n        'pinata_api_key': pinataKey,\n        'pinata_secret_api_key': pinataSecret,\n      },\n      body: formData,\n    });\n\n    const result = await response.json();\n\n    if (response.ok) {\n      return {\n        success: true,\n        pinataUrl: `https://gateway.pinata.cloud/ipfs/${result.IpfsHash}`,\n      };\n    } else {\n      throw new Error(result.error || 'Failed to pin file to IPFS');\n    }\n  } catch (error) {\n    console.error('Error uploading file to IPFS:', error);\n    return {\n      success: false,\n      message: error.message,\n    };\n  }\n};\n","import { ethers } from 'ethers';\nimport { nftContractAddress } from './constants';\nimport { uploadImageToIpfs } from './pinata.js';\n\nconst contractABI = require('../MhtNFT-contract-abi.json');\n\nasync function getProviderAndSigner() {\n  const provider = new ethers.BrowserProvider(window.ethereum);\n  const signer = await provider.getSigner();\n  return { provider, signer };\n}\n\nasync function initializeContract() {\n  const { signer } = await getProviderAndSigner();\n  return new ethers.Contract(nftContractAddress, contractABI, signer);\n}\n\nexport const connectWallet = async () => {\n  if (!window.ethereum) {\n    return {\n      status: 'Metamask is not installed. Please install Metamask to connect your wallet.',\n    };\n  }\n\n  try {\n    await window.ethereum.request({ method: 'eth_requestAccounts' });\n    const { signer } = await getProviderAndSigner();\n    const address = await signer.getAddress();\n\n    return {\n      status: 'Wallet connected successfully.',\n      address,\n    };\n  } catch (err) {\n    console.error('Error connecting wallet:', err);\n    return {\n      status: err.code === 4001\n        ? 'Connection request was denied by the user.'\n        : `An error occurred: ${err.message}`,\n    };\n  }\n};\n\nexport const getCurrentWalletConnected = async () => {\n  if (!window.ethereum) {\n    return {\n      address: null,\n      status: 'Metamask is not installed. Please install Metamask to connect your wallet.',\n    };\n  }\n\n  try {\n    const accounts = await window.ethereum.request({ method: 'eth_accounts' });\n    if (accounts.length > 0) {\n      return {\n        address: accounts[0],\n        status: 'Wallet connected successfully.',\n      };\n    } else {\n      return {\n        address: null,\n        status: 'Please connect your wallet using the Connect Wallet button.',\n      };\n    }\n  } catch (err) {\n    console.error('Error checking wallet connection:', err);\n    return {\n      address: null,\n      status: `An error occurred: ${err.message}`,\n    };\n  }\n};\n\nexport const mintToken = async (file) => {\n  if (!file) {\n    return {\n      success: false,\n      status: 'Please upload an image file before minting.',\n    };\n  }\n\n  const imageResponse = await uploadImageToIpfs(file);\n  if (!imageResponse.success) {\n    return {\n      success: false,\n      status: 'An error occurred while uploading the image to IPFS.',\n    };\n  }\n\n  const imageUrl = imageResponse.pinataUrl;\n\n  try {\n    const { signer } = await getProviderAndSigner();\n    const address = await signer.getAddress();\n    const contract = await initializeContract();\n\n    const tx = await contract.mintNFT(address, imageUrl);\n    await tx.wait();\n\n    return {\n      success: true,\n      status: `Transaction successful! View it on Etherscan: https://sepolia.etherscan.io/tx/${tx.hash}`,\n    };\n  } catch (error) {\n    return {\n      success: false,\n      status: `Failed to mint the NFT: ${error.message}`,\n    };\n  }\n};\n\nexport const transferNFT = async (tokenId, recipientAddress) => {\n  if (!tokenId || !recipientAddress.trim()) {\n    return {\n      success: false,\n      status: 'Token ID and recipient address are required for transfer.',\n    };\n  }\n\n  try {\n    const contract = await initializeContract();\n    const { signer } = await getProviderAndSigner();\n    const address = await signer.getAddress();\n\n    const tx = await contract.transferFrom(address, recipientAddress, tokenId);\n    await tx.wait();\n\n    return {\n      success: true,\n      status: `NFT transferred successfully! View it on Etherscan: https://sepolia.etherscan.io/tx/${tx.hash}`,\n    };\n  } catch (error) {\n    return {\n      success: false,\n      status: `Failed to transfer the NFT: ${error.message}`,\n    };\n  }\n};\n\nexport const fetchOwnedNFTs = async (walletAddress) => {\n  try {\n\n    const { address } = await getCurrentWalletConnected();\n\n    if (!address) {\n      return {\n        success: false,\n        status: 'Wallet is not connected. Please connect your wallet.',\n      };\n    }\n    const contract = await initializeContract();\n    const balance = await contract.balanceOf(walletAddress);\n    const nfts = [];\n\n    for (let i = 0; i < balance.toString(); i++) {\n      const tokenId = await contract.tokenOfOwnerByIndex(walletAddress, i);\n      const tokenURI = await contract.tokenURI(tokenId);\n      nfts.push({ tokenId: tokenId.toString(), tokenURI });\n    }\n\n    return {\n      success: true,\n      nfts: nfts,\n      status: 'NFTs fetched successfully.',\n    };\n  } catch (error) {\n    return {\n      success: false,\n      status: `Failed to fetch NFTs: ${error.message}`,\n    };\n  }\n};","import { render } from \"./MintToken.vue?vue&type=template&id=3f2fb0ea\"\nimport script from \"./MintToken.vue?vue&type=script&lang=js\"\nexport * from \"./MintToken.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=712aae26\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=712aae26&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunknft_dapp\"] = self[\"webpackChunknft_dapp\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(3896); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createElementBlock","_Fragment","_createElementVNode","alt","src","_imports_0","_createVNode","_component_MintToken","class","key","id","style","color","_hoisted_1","_component_WalletButton","walletAddress","$setup","onConnectWallet","handleWalletConnection","_component_MintForm","onFileChange","handleFileChange","onMintNft","handleMinting","_component_OwnedNfts","nfts","ownedNfts","onLoadNfts","fetchMyNFTs","onTransferNft","openTransferModal","statusMessage","_hoisted_2","_toDisplayString","_createCommentVNode","_component_TransferModal","show","showModal","tokenId","selectedTokenId","onConfirmTransfer","confirmTransfer","onCloseModal","closeTransferModal","onClick","_cache","args","$options","$props","slice","props","methods","this","$emit","__exports__","onSubmit","_withModifiers","for","type","onChange","event","target","files","$event","_ctx","length","_renderList","nft","tokenURI","_hoisted_3","_hoisted_4","placeholder","$data","recipientAddress","data","nftContractAddress","pinataKey","process","pinataSecret","uploadImageToIpfs","async","endpoint","formData","FormData","append","file","response","fetch","method","headers","body","result","json","ok","success","pinataUrl","IpfsHash","Error","error","console","message","contractABI","require","getProviderAndSigner","provider","ethers","window","ethereum","signer","getSigner","initializeContract","connectWallet","status","request","address","getAddress","err","code","getCurrentWalletConnected","accounts","mintToken","imageResponse","imageUrl","contract","tx","mintNFT","wait","hash","transferNFT","trim","transferFrom","fetchOwnedNFTs","balance","balanceOf","i","toString","tokenOfOwnerByIndex","push","components","WalletButton","MintForm","OwnedNfts","TransferModal","setup","ref","assetFile","listenForAccountChanges","on","value","onMounted","resetMintForm","name","MintToken","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}